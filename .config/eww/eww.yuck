
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                CALENDAR
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget cal []
	(box :class "cal-box" 
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal" 
			  :day calendar_day 
			  :month calendar_month 
			  :year calendar_year))))
(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                WORKSPACE
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget workspaces []
  (box :orientation "h"
       :space-evenly false
  (literal :content workspaces_listen)
  (music)))
(deflisten workspaces_listen "scripts/workspace")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                 MUSIC
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget music []
  (revealer :transition "slideright" 
              :reveal {music != ""}
  (box :class "music"
       :orientation "h"
       :space-evenly false
    {music != "" ? "${music}" : ""})))

(deflisten music :initial ""
  "zscroll -d 0.3 -l 30 --match-command \"playerctl status\" --match-text \"Playing\" \"--scroll 1 --b '  '\" --match-text \"Paused\" \"--scroll 0 --b '  '\" --update-check true \"playerctl metadata --format '{{ artist }} - {{ title }}'\"")
  
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                 TIME
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll time_val :interval "10s"
  "date '+%d %b  %I:%M %p'")
(defwidget time []
  (button :class "time" 
            :onclick "scripts/calendar"
            time_val))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                 VOLUME
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll current-volume :interval "1s"
  "scripts/getvol")

(defvar vol_reveal false)
(defvar volume_icon "󰕾 ")

(defwidget volume []
  (box :orientation "h"
       :class "volume"
       :space-evenly false
    (eventbox :onhover "${EWW_CMD} update vol_reveal=true"
              :onhoverlost "${EWW_CMD} update vol_reveal=false"
    (box :space-evenly false
    (revealer :transition "slideleft" 
              :reveal vol_reveal
    (scale :min 0
           :max 101
           :active true
           :value current-volume
           :flipped true
           :onchange "amixer set Master {}%; "))
    (button :class "label" 
            :onclick "scripts/volume"
            volume_icon)
    ))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                 WIFI
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget wifi []
	(box		:orientation "h"  
				:tooltip wifi-name
	(button		:onclick "xfce4-terminal -e nmtui --hide-borders --geometry=25x13+1720+20" 
				:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                 POWER
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defvar power_reveal false)
(defwidget power []
  (box :orientation "h"
       :class "power"
       :space-evenly false
    (eventbox :onhover "${EWW_CMD} update power_reveal=true"
              :onhoverlost "${EWW_CMD} update power_reveal=false"
    (box :space-evenly false
    (revealer :transition "slideleft" 
              :reveal power_reveal
    (box :space-evenly true
    (button :class "logout" 
            :onclick "xfce4-session-logout --logout"
            "󰍃 ")
    (button :class "reboot" 
            :onclick "xfce4-session-logout --reboot"
            " ")
    ))
    (button :class "shutdown" 
            :onclick "shutdown now"
            "⏻ ")
    ))))
  
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;                 MAIN
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (time)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (volume)
    (wifi)
    (power)
    ))


(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0.5%"
                      :width "98%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4.3%")
  (bar))
  
;; Calendar Windows ;;
(defwindow calendar
	:geometry (geometry :x "43%" 
						:y "5%" 
						:width "270px" 
						:height "60px")
(cal))
