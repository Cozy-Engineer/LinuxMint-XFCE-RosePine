#!/bin/bash

menu() {
    # Get the number of workspaces in Xfce
    LOCK_FILE="$HOME/.cache/eww-wifi.lock"

    # Open widgets
    if [ ! -f "$LOCK_FILE" ]; then
        eww open wifi_menu
        sleep 0.5
        touch $LOCK_FILE
    else
        eww close wifi_menu
        rm "$LOCK_FILE"
        exit
    fi
}

status() {
    status=$(nmcli radio wifi)
    
    if [ $status = "enabled" ]; then
        nmcli radio wifi off
        eww update wifi_status="off"
    else
        nmcli radio wifi on
        eww update wifi_status="on"
    fi
}

refresh() {
    rotate=0
    end=$((SECONDS + 5))  # Run for 2 seconds
    while [ $SECONDS -lt $end ]; do
        rotate=$(echo "$rotate + 1" | bc)  # Increment rotate by 0.3
        rotate=$(echo "$rotate % 100" | bc)  # Keep rotate within 0-100 range
        eww update refresh_rotate=$rotate
    done
}

connect() {
    refresh &
    if [ "$2" = "known" ]; then
        nmcli connection up "$1"
    else
        nmcli device wifi connect "$1" password "$2"
    fi
    wifi_list
}

wifi_list() {
    # Force a Wi-Fi scan to get fresh results
    buf=""
    refresh
    nmcli device wifi rescan
    eww update selected_wifi=""
#    sleep 2  # Give some time for the scan to complete

    # Capture SSID and BARS into an array
    mapfile -t wifi_list < <(nmcli -t -f IN-USE,SSID,BARS,BSSID device wifi list | sed 's/\\://g' )
    mapfile -t known_wifi_list < <(nmcli -t -f NAME connection show)

    # Loop through each Wi-Fi network found
    for wifi in "${wifi_list[@]}"; do
        inuse=$(echo "$wifi" | cut -d: -f1 | tr -d ' ')
        ssid=$(echo "$wifi" | cut -d: -f2)
        bars=$(echo "$wifi" | cut -d: -f3)
        bssid=$(echo "$wifi" | cut -d: -f4)
        connect="Connect"
        class="wifi-item"
        connect_action="\"scripts/wifi_menu connect \\\"$ssid\\\" \\\"\${password_l}\\\"\""
        got_password=true

        # Print SSID and signal strength
        if [ -z "$ssid" ]; then
            continue
        fi
        
        for known_wifi in "${known_wifi_list[@]}"; do
            if [ "$ssid" = "$known_wifi" ]; then
                connect_action="\"scripts/wifi_menu connect \\\"$ssid\\\" \\\"known\\\"\""
                got_password=false
            fi
        done
        
        if [ -n "$inuse" ]; then
            class="wifi-item-enabled"
            connect="Disconnect"
            connect_action="\"nmcli connection down \\\"$ssid\\\" ; scripts/wifi_menu list\""
            got_password=false
        fi
        
        buf="$buf 
        (eventbox :class {selected_wifi==\"$bssid\" ? \"$class selected\" : \"$class\"}
        (box :orientation \"v\" :hexpand true :space-evenly false 
        (button :onclick {selected_wifi==\"$bssid\" ? \"eww update selected_wifi=\\\"\\\"\" : \"eww update selected_wifi=\\\"$bssid\\\"\"} :hexpand true 
        (box :orientation \"h\" :hexpand true :space-evenly false 
        (label :hexpand true :halign \"start\" :text \"$ssid\") 
        (label :hexpand true :halign \"end\" :text \"$bars\"))) 
        (revealer :transition \"slideup\" :reveal {selected_wifi==\"$bssid\"} 
        (box :orientation \"h\" :hexpand true :space-evenly false :spacing 10 
        (input :class \"password_box_$got_password\" :active $got_password :hexpand true :password true :onchange \"eww update password_l={}\" :onaccept $connect_action :value \"\")
        (button :class \"connect_button\" :vexpand true :hexpand true :halign \"end\" :onclick $connect_action \"$connect\")))))"
    done
    
    eww update wifi_list_content="(scroll :hexpand true :class \"wifi-scroll\" :hscroll false :vscroll true :height 300 (box :class \"wifi-list\" :orientation \"v\" :halign \"start\" :hexpand true :space-evenly false $buf))"
#    echo "(scroll :hexpand true :class \"wifi-scroll\" :hscroll false :vscroll true :height 300 (box :class \"wifi-list\" :orientation \"v\" :halign \"start\" :hexpand true :space-evenly false $buf))"
    
#    echo "(label :class \"wifi-bar\" :halign \"start\" :space-evently false :valign \"start\" :text \"▂▄▆_\")"
}

[ "$1" = "status" ] && status && exit
[ "$1" = "menu" ] && menu && exit
[ "$1" = "list" ] && wifi_list && exit
[ "$1" = "refresh" ] && refresh && exit
[ "$1" = "connect" ] && connect "$2" "$3" && exit
